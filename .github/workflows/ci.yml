name: CI

on:
  pull_request:
  push:
    branches: [master]
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  rust-ci:
    if: github.event.pull_request.draft != true

    strategy:
      matrix:
        include:
          - os: macos-latest
            target: x86_64-apple-darwin
          - os: macos-latest
            target: aarch64-apple-darwin
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            dependencies: "libssl-dev libasound2-dev libdbus-1-dev"
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            cross_arch: true
        toolchain: [1.88.0]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install libssl-dev libasound2-dev libdbus-1-dev
        if: ${{ runner.os == 'Linux' }}

      - name: Checkout source
        uses: actions/checkout@v5

      - name: Install Rust toolchain
        id: install_toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.toolchain }}
          components: clippy, rustfmt

      - name: Cache cargo deps
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
          key: ${{ runner.os }}-rustc-${{ steps.install_toolchain.outputs.cachekey }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-rustc-${{ steps.install_toolchain.outputs.cachekey }}

      - name: Cargo format
        run: cargo fmt --check

      - name: Cargo clippy with all features
        run: cargo clippy --all-features --all-targets --locked -- -D warnings

      - name: Cargo test
        run: cargo test --all-features --all-targets --locked